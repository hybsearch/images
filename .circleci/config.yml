---
version: 2

x-defs:
  - &defaults
    docker:
      - image: docker
  - &caches
    - &cache-load-docker
      keys:
        - docker--{{ .Environment.CIRCLE_JOB }}--{{ arch }}-{{ .Branch }}-{{ .Revision }}
        - docker--{{ .Environment.CIRCLE_JOB }}--{{ arch }}-{{ .Branch }}
        - docker--{{ .Environment.CIRCLE_JOB }}--{{ arch }}
    - &cache-save-docker
      key: docker--{{ .Environment.CIRCLE_JOB }}--{{ arch }}-{{ .Branch }}-{{ .Revision }}
      paths:
        - /tmp/image.tar
  - &docker-dump-image
    name: 'Dump image'
    command: >-
      docker save "hybsearch/$(echo $CIRCLE_JOB | rev | cut -d'-' -f2- | rev):$CIRCLE_SHA1" > /tmp/image.tar
  - &docker-load-image
    name: 'Load cached image'
    command: >-
      test -r /tmp/image.tar && docker load -qi /tmp/image.tar || echo "No cache found."
  - &docker-build-circle-job-image
    name: "Build the Docker Image"
    command: >-
      pwd;
      ls -lah;
      ./script/ci_build_image

  - &print-build-info
    name: "Print build information"
    command: >-
      echo "Image: $(echo $CIRCLE_JOB | rev | cut -d'-' -f2- | rev)";
      echo "Variant: $(echo $CIRCLE_JOB | rev | cut -d'-' -f1 | rev)"

workflows:
  version: 2
  main:
    jobs: &jobs
      - base-stretch
      - base-alpine

      - libs-stretch: { requires: [ base-stretch ] }
      - libs-alpine: { requires: [ base-alpine ] }

      - java-stretch: { requires: [ libs-stretch ] }
      - java-alpine: { requires: [ libs-alpine ] }

      - clustalo-stretch: { requires: [ libs-stretch ] }
      - clustalo-alpine: { requires: [ libs-alpine ] }

      - jml-stretch: { requires: [ libs-stretch ] }
      - jml-alpine: { requires: [ libs-alpine ] }

      - mr-bayes-stretch: { requires: [ libs-stretch ] }
      - mr-bayes-alpine: { requires: [ libs-alpine ] }

      - seq-gen-stretch: { requires: [ libs-stretch ] }
      - seq-gen-stretch: { requires: [ libs-alpine ] }

      - beast-stretch: { requires: [ java-stretch ] }
      - beast-alpine: { requires: [ java-alpine ] }

  cron:
    jobs: *jobs
    triggers:
      - schedule:
          # Run quadridiurnally (4x per day, every 6th hour UTC)
          cron: "0 0,6,12,18 * * *"
          filters:
            branches:
              only: [master]

jobs:
  base-stretch: &auto_build
    <<: *defaults
    steps: &standard_build_steps
      - setup_remote_docker
      - checkout
      - restore_cache: *cache-load-docker
      - run: *docker-load-image
      - run: *docker-build-circle-job-image
      - run: *docker-dump-image
      - save_cache: *cache-save-docker

  base-alpine: *auto_build

  libs-stretch: *auto_build
  libs-alpine: *auto_build

  java-stretch: *auto_build
  java-alpine: *auto_build

  clustalo-stretch: *auto_build
  clustalo-alpine: *auto_build

  jml-stretch: *auto_build
  jml-alpine: *auto_build

  mr-bayes-stretch: *auto_build
  mr-bayes-alpine: *auto_build

  seq-gen-stretch: *auto_build
  seq-gen-alpine: *auto_build

  beast-stretch: *auto_build
  beast-alpine: *auto_build
